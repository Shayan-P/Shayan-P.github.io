<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Shayan Pardis</title>
    <link>https://shayanp.me/</link>
    <description>Recent content on Shayan Pardis</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en</language>
    <copyright>Shayan Pardis</copyright>
    <lastBuildDate>Sat, 30 Nov 2024 01:23:20 -0400</lastBuildDate>
    <atom:link href="https://shayanp.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auto Recurrent Agent</title>
      <link>https://shayanp.me/ideas/auto-recurrent-agent/</link>
      <pubDate>Sat, 30 Nov 2024 01:23:20 -0400</pubDate>
      <guid>https://shayanp.me/ideas/auto-recurrent-agent/</guid>
      <description>&lt;p&gt;&lt;strong&gt;This is perhaps very relevant to Noam Brown&amp;rsquo;s multi step reasoning and O1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;#idea
I want to build my own RAG search in Obsidian Nice :D&lt;/p&gt;
&lt;p&gt;#idea
agentic LLM. Give it access to a bunch of functions and let it decide how it wants to evaluate stuff&amp;hellip;
maybe it can be function calls using $(func()) and we pass the result of evaluations in the text&amp;hellip;
-&amp;gt; it can dump it&amp;rsquo;s own memory to files&amp;hellip; and basically trace the links later if it wants. we will also give it a scratchpad memory&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dynamic Neural Memory for In-Context Learning: SSMs or Transformers?</title>
      <link>https://shayanp.me/ideas/neural-memory-for-in-context-learning/</link>
      <pubDate>Wed, 30 Oct 2024 01:23:20 -0400</pubDate>
      <guid>https://shayanp.me/ideas/neural-memory-for-in-context-learning/</guid>
      <description>Can we combine features of both SSMs and Transformers to build a graph-like hierarchical memory mechanism with sublinear growth? Each node represents a concept, and edges connect concepts similar to an associative memory. The graph is traversed with attention mechanism to retrieve or add information.</description>
    </item>
    <item>
      <title>Probabilistic Homotopy Optimization for Dynamic Motion Planning</title>
      <link>https://shayanp.me/projects/probabilistic-homotopy-optimization-for-dynamic-motion-planning/</link>
      <pubDate>Sat, 01 Jun 2024 16:01:00 -0400</pubDate>
      <guid>https://shayanp.me/projects/probabilistic-homotopy-optimization-for-dynamic-motion-planning/</guid>
      <description>Inspired by Curriculum Learning and Probabilistic Roadmaps, PHO traverses a multidimensional homotopy space and discovers highly dynamic trajectories.</description>
    </item>
    <item>
      <title>Shape Generation with SO3-Equivariant Auto-Encoders</title>
      <link>https://shayanp.me/projects/novel-shape-generation-with-so3-equivariant-auto-encoders/</link>
      <pubDate>Wed, 01 May 2024 16:01:00 -0400</pubDate>
      <guid>https://shayanp.me/projects/novel-shape-generation-with-so3-equivariant-auto-encoders/</guid>
      <description>Designed an SO(3) equivariant autoencoder using spherical harmonics and a latent space traversal that separates rotation from deformation.</description>
    </item>
    <item>
      <title>Decision State Space Model</title>
      <link>https://shayanp.me/projects/decision-ssm/</link>
      <pubDate>Mon, 01 Apr 2024 16:01:00 -0400</pubDate>
      <guid>https://shayanp.me/projects/decision-ssm/</guid>
      <description>Reimplemented Decision Transformer replacing transformer with S4 model and demonstrated improved performance in credit assignment tasks.</description>
    </item>
    <item>
      <title>Face Explore</title>
      <link>https://shayanp.me/projects/face-explore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://shayanp.me/projects/face-explore/</guid>
      <description>Created a face search engine that uses a custom clustering method on ResNet vector embeddings (unsupervised). The UI is a scalable website.</description>
    </item>
    <item>
      <title>Formal Complexity Verification</title>
      <link>https://shayanp.me/projects/formal-complexity-verification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://shayanp.me/projects/formal-complexity-verification/</guid>
      <description>Formulated time complexity verification of a program as synthesizing a fix-point function. The demo uses a custom language with Python syntax.</description>
    </item>
    <item>
      <title>Scripty</title>
      <link>https://shayanp.me/projects/scripty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://shayanp.me/projects/scripty/</guid>
      <description>Educational tool to track student performance on projects, providing live feedback and tips, and automating infrastructure setup for instructors. Built with Python, DSPy, Kubernetes, and React; won Warp and Orbstack challenge prizes.</description>
    </item>
    <item>
      <title>Sharif AI Challenge</title>
      <link>https://shayanp.me/projects/sharif-ai-challenge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://shayanp.me/projects/sharif-ai-challenge/</guid>
      <description>Developed AI agents for a multi-agent game, achieving 4th place in the competition. Implemented Huffman coding for cost-effective communication and utilized the A* algorithm for shortest pathfinding on a partially explored map.</description>
    </item>
  </channel>
</rss>
